""" Copyright 2012, July 29
	Written by Pattarapol (Cheer) Iamngamsup
	E-mail:  IAM.PATTARAPOL@GMAIL.COM
	
	Even Fibonacci numbers
	Problem 2
	
	Each new term in the Fibonacci sequence is generated by
	adding the previous two terms. By starting with 1 and 2,
	the first 10 terms will be:
		1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

	By considering the terms in the Fibonacci sequence
	whose values do not exceed four million,
	find the sum of the even-valued terms.
"""

#################################################
#   Importing libraries & modules
import datetime

from MyMathSolver import MyMathSolver

#################################################
#   Global variables

#################################################
#   Functions

#################################################
#   Classes

#################################################
#   Main function
def main():
	
	#	compute fibonacci numbers list not exceed four million
	fibonacciNumbersList = MyMathSolver.getFibonacciNumbersList( maxNumber = 4*10**6 )
	
	#	compute sum of all even fibonacci numbers
	sumEvenFibonacciNumber = 0
	for value in fibonacciNumbersList:
		if value % 2 == 0:
			sumEvenFibonacciNumber += value
	print( 'answer = {0}'.format( sumEvenFibonacciNumber ) )
	
#################################################
#   Main execution
if __name__ == '__main__':
	#   get starting date time
	startingDateTime = datetime.datetime.utcnow()
	print( 'startingDateTime = {0} UTC'.format( startingDateTime ) )

	#   call main function
	main()

	#   get ending date time
	endingdateTime = datetime.datetime.utcnow()
	print( 'endingdateTime = {0} UTC'.format( endingdateTime ) )

	#   compute delta date time
	deltaDateTime = endingdateTime - startingDateTime
	print( 'deltaDateTime = {0}'.format( deltaDateTime ) )
